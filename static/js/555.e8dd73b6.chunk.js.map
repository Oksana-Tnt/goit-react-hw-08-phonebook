{"version":3,"file":"static/js/555.e8dd73b6.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/UploadAvatar/UploadAvatar.jsx","components/UserMenu/UserMenu.jsx","components/Contact/Contact.jsx","components/ErrorCard/ErrorCard.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/FormContact/FormContact.jsx","components/Contact/ContactMobile.jsx","components/EmptyPhonebook/EmptyPhonebook.jsx","components/ContactList/ContactListMobile.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst Modal = ({ children, closeModal }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n  return (\n    <div\n      className=\"modal fade show\"\n      style={{ display: 'block', backdropFilter: 'blur(5px)' }}\n      onClick={handleBackdropClick}\n    >\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              area-label=\"close\"\n              onClick={closeModal}\n            ></button>\n          </div>\n          <div className=\"modal-body\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\n\nimport Avatar from 'react-avatar-edit';\nimport { useDispatch } from 'react-redux';\nimport { uploadAvatar } from 'redux/avatar/avatarSlice';\n\nconst UploadAvatar = () => {\n  const [src] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const dispatch = useDispatch();\n\n  const onCrop = view => {\n    setPreview(view);\n  };\n\n  console.log(preview);\n  return (\n    <>\n      <Avatar\n        src={src}\n        width={300}\n        height={300}\n        onCrop={onCrop}\n        onClose={() => dispatch(uploadAvatar(preview))}\n      />\n    </>\n  );\n};\n\nexport default UploadAvatar;\n","import {\n  Avatar,\n  Button,\n  Tag,\n  TagLabel,\n  Wrap,\n  WrapItem,\n} from '@chakra-ui/react';\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport { logoutThunk } from 'redux/auth/thunk';\n\nimport { BiLogOut } from 'react-icons/bi';\n\nimport UploadAvatar from 'components/UploadAvatar/UploadAvatar';\n\nimport Modal from 'components/Modal/Modal';\nimport { deleteAvatar } from 'redux/avatar/avatarSlice';\nimport { useMediaQuery } from 'react-responsive';\n\nconst UserMenu = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleLogOut = () => {\n    dispatch(logoutThunk());\n    dispatch(deleteAvatar());\n    navigate('/');\n  };\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsShowModal(!isShowModal);\n  };\n  const preview = useSelector(state => state.avatar.preview);\n  const name = useSelector(authSelectors.getUserName);\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 375px)' });\n  return (\n    <>\n      <Wrap\n        align=\"center\"\n        justify={isTabletOrMobile ? 'center' : 'space-between'}\n        pt={4}\n      >\n        <WrapItem>\n          <Tag size=\"lg\" colorScheme=\"grey\" borderRadius=\"full\">\n            <Avatar\n              src={preview}\n              size=\"md\"\n              name=\"User avatar\"\n              ml={-1}\n              mr={2}\n              onClick={toggleModal}\n            />\n\n            <TagLabel color=\"red\" textShadow=\"1px 1px black\" pl={2}>\n              Hello, {name}\n            </TagLabel>\n          </Tag>\n        </WrapItem>\n\n        {isShowModal && (\n          <Modal closeModal={toggleModal}>\n            <UploadAvatar />\n          </Modal>\n        )}\n        <WrapItem>\n          <Button colorScheme=\"red\" size=\"sm\" w=\"50px\" onClick={handleLogOut}>\n            <BiLogOut />\n          </Button>\n        </WrapItem>\n      </Wrap>\n    </>\n  );\n};\n\nexport default UserMenu;\n","import React from 'react';\nimport { RiDeleteBin6Fill } from 'react-icons/ri';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactsThunk } from 'redux/contacts/thunk';\nimport { Button, Td } from '@chakra-ui/react';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Td textAlign=\"center\" fontSize=\"lg\">\n        {name}\n      </Td>\n      <Td textAlign=\"center\" fontSize=\"lg\">\n        {number}\n      </Td>\n      <Td textAlign=\"center\">\n        <Button\n          onClick={() => dispatch(deleteContactsThunk(id))}\n          area-label=\"Delete contact\"\n          colorScheme=\"red\"\n          size=\"sm\"\n          w=\"50px\"\n        >\n          <RiDeleteBin6Fill />\n        </Button>\n      </Td>\n    </>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport img from '../../images/saddest-cat-luhu-maggie-liu-lanlan731-38-59c0bfed09657__700.jpg';\n\nconst ErrorCard = () => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">OOOps, there is no image</h5>\n        <img src={img} width=\"300px\" alt=\"Sad cat\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorCard;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsThunk } from 'redux/contacts/thunk';\nimport Contact from 'components/Contact/Contact';\nimport ErrorCard from 'components/ErrorCard/ErrorCard';\nimport Loader from 'components/Loader/Loader';\nimport { Table, TableContainer, Tbody, Th, Thead, Tr } from '@chakra-ui/react';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  FULFILLED: 'fulfilled',\n  REJECTED: 'rejected',\n};\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const status = useSelector(state => state.contacts.status);\n  // const auth = useSelector(state => state.auth.token);\n  const filterContact = useSelector(state => state.filter.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterContact.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  if (status === STATUS.PENDING) return <Loader />;\n  else if (status === STATUS.FULFILLED) {\n    return (\n      <TableContainer justifyContent=\"center\">\n        <Table size=\"lg\">\n          <Thead>\n            <Tr>\n              <Th textAlign=\"center\" fontSize=\"large\" color=\"black\">\n                Name\n              </Th>\n              <Th textAlign=\"center\" fontSize=\"large\" color=\"black\">\n                Number\n              </Th>\n              <Th textAlign=\"center\" fontSize=\"large\" color=\"black\">\n                Delete\n              </Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {filteredContacts.map(({ id, name, number }) => (\n              <Tr key={id}>\n                <Contact id={id} name={name} number={number} />\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      </TableContainer>\n    );\n  } else if (status === STATUS.REJECTED) return <ErrorCard />;\n};\nexport default ContactList;\n","import { Input } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <form>\n      <Input\n        boxShadow=\"xl\"\n        p=\"6\"\n        rounded=\"md\"\n        bg=\"white\"\n        type=\"text\"\n        className=\"form-control\"\n        aria-label=\"Sizing example input\"\n        aria-describedby=\"inputGroup-sizing-sm\"\n        id=\"inputGroup-sizing-sm\"\n        placeholder=\"search contact\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      ></Input>\n    </form>\n  );\n};\n\nexport default Filter;\n","import { Button, Center, FormLabel, Input } from '@chakra-ui/react';\n\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { addContactsThunk } from 'redux/contacts/thunk';\n\nconst FormContact = ({ closeModal }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ defaultValues: { name: '', number: '' } });\n\n  // const name = watch('name');\n  // const number = watch('number');\n\n  const dispatch = useDispatch();\n  return (\n    <form\n      onSubmit={handleSubmit(data => {\n        dispatch(addContactsThunk(data));\n\n        closeModal();\n      })}\n    >\n      <FormLabel>Name</FormLabel>\n      <Input\n        {...register('name', {\n          required: 'This is required',\n          minLength: {\n            value: 6,\n            message: 'Min length is 6',\n          },\n        })}\n        type=\"text\"\n        placeholder=\"name\"\n        size=\"md\"\n        mb={4}\n        autoComplete=\"name\"\n      />\n      <p>{errors.name?.message}</p>\n      <FormLabel>Number</FormLabel>\n      <Input\n        {...register('number', {\n          required: true,\n          minLength: {\n            value: 6,\n            message: 'Min length is 6',\n          },\n        })}\n        type=\"tel\"\n        placeholder=\"phone number\"\n        size=\"md\"\n        mb={4}\n        autoComplete=\"phone number\"\n      />\n      <p>{errors.number?.message}</p>\n\n      <Center>\n        <Button type=\"submit\" colorScheme=\"red\" size=\"md\" width=\"100px\">\n          Add contact\n        </Button>\n      </Center>\n    </form>\n  );\n};\n\nexport default FormContact;\n","import React from 'react';\nimport { RiDeleteBin6Fill } from 'react-icons/ri';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactsThunk } from 'redux/contacts/thunk';\nimport {\n  Button,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Heading,\n  Text,\n} from '@chakra-ui/react';\n\nconst ContactMobile = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <CardHeader>\n        <Heading size=\"md\"> {name}</Heading>\n      </CardHeader>\n      <CardBody>\n        <Text>{number}</Text>\n      </CardBody>\n      <CardFooter>\n        <Button\n          onClick={() => dispatch(deleteContactsThunk(id))}\n          area-label=\"Delete contact\"\n          colorScheme=\"red\"\n          size=\"sm\"\n          w=\"50px\"\n        >\n          <RiDeleteBin6Fill />\n        </Button>\n      </CardFooter>\n    </>\n  );\n};\n\nexport default ContactMobile;\n","import React from 'react';\nimport { Card, CardBody, Heading, Stack } from '@chakra-ui/react';\n\nconst EmptyPhonebook = () => {\n  return (\n    <Card maxW=\"sm\" mt=\"10\" backgroundColor=\"transparent\">\n      <CardBody>\n        <Stack mt=\"6\" spacing=\"3\" textAlign=\"center\">\n          <Heading size=\"lg\" color=\"red\" textShadow=\"2px 2px black\">\n            Your phonebook is enpty\n          </Heading>\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default EmptyPhonebook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport ErrorCard from 'components/ErrorCard/ErrorCard';\nimport Loader from 'components/Loader/Loader';\nimport { fetchContactsThunk } from 'redux/contacts/thunk';\nimport { useEffect } from 'react';\nimport { Card, SimpleGrid } from '@chakra-ui/react';\nimport ContactMobile from 'components/Contact/ContactMobile';\nimport EmptyPhonebook from 'components/EmptyPhonebook/EmptyPhonebook';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  FULFILLED: 'fulfilled',\n  REJECTED: 'rejected',\n};\n\nconst ContactListMobile = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const status = useSelector(state => state.contacts.status);\n  // const auth = useSelector(state => state.auth.token);\n  const filterContact = useSelector(state => state.filter.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterContact.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  if (status === STATUS.PENDING) return <Loader />;\n  else if (status === STATUS.FULFILLED) {\n    return (\n      <SimpleGrid\n        spacing={4}\n        templateColumns=\"repeat(auto-fill, minmax(200px, 1fr))\"\n      >\n        {filteredContacts.length === 0 && <EmptyPhonebook />}\n\n        {filteredContacts.map(({ id, name, number }) => (\n          <Card align=\"center\" backgroundColor=\"transparent\" key={id}>\n            <ContactMobile id={id} name={name} number={number} />\n          </Card>\n        ))}\n      </SimpleGrid>\n    );\n  } else if (status === STATUS.REJECTED) return <ErrorCard />;\n};\nexport default ContactListMobile;\n","import { Box, Button, Center, Heading, Wrap, WrapItem } from '@chakra-ui/react';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport FormContact from 'components/FormContact';\n\nimport Modal from 'components/Modal/Modal';\nimport React, { useState } from 'react';\nimport { IoPersonAddSharp } from 'react-icons/io5';\nimport backgroundImg from '../images/grey-gradient-background-1080-x-1920-mva29ml67gjxd6ht.jpg';\n\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport { AiFillHome } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\nimport ContactListMobile from 'components/ContactList/ContactListMobile';\n\nconst PhonebookPage = () => {\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsShowModal(!isShowModal);\n  };\n\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 500px)' });\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  return (\n    <>\n      <Box\n        pl={10}\n        pr={10}\n        position=\"relative\"\n        h={\n          contacts.length === 0 || contacts.length === 1 || !isTabletOrMobile\n            ? '100vh'\n            : '100%'\n        }\n        backgroundImage={backgroundImg}\n        backgroundPosition=\"center\"\n        backgroundRepeat=\"no-repeat\"\n        backgroundSize=\"cover\"\n      >\n        {isLoggedIn && <UserMenu />}\n\n        <Center>\n          <Heading\n            as={isDesktopOrLaptop ? 'h1' : 'h5'}\n            size={isDesktopOrLaptop ? 'x-lg' : 'lg'}\n            color=\"red\"\n            textShadow=\"2px 2px black\"\n            m=\"6\"\n          >\n            Phonebook\n          </Heading>\n        </Center>\n\n        <Wrap justify=\"space-between\">\n          <WrapItem>\n            <NavLink to=\"/\">\n              <Button mr={5} colorScheme=\"red\" size=\"sm\" w=\"50px\">\n                <AiFillHome />\n              </Button>\n            </NavLink>\n          </WrapItem>\n          <WrapItem>\n            <Button\n              colorScheme=\"red\"\n              size=\"sm\"\n              w=\"50px\"\n              onClick={toggleModal}\n              area-label=\"Add contact\"\n            >\n              <IoPersonAddSharp />\n            </Button>\n          </WrapItem>\n        </Wrap>\n\n        {contacts.length > 0 && <Filter />}\n\n        {isShowModal && (\n          <Modal closeModal={toggleModal}>\n            <FormContact closeModal={toggleModal} />\n          </Modal>\n        )}\n        {isTabletOrMobile ? <ContactListMobile /> : <ContactList />}\n      </Box>\n    </>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["_ref","children","closeModal","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","_jsx","className","style","display","backdropFilter","onClick","currentTarget","target","_jsxs","type","_useState","useState","src","_slicedToArray","_useState3","_useState4","preview","setPreview","dispatch","useDispatch","console","log","_Fragment","Avatar","width","height","onCrop","view","onClose","uploadAvatar","navigate","useNavigate","_useState2","isShowModal","setIsShowModal","toggleModal","useSelector","state","avatar","name","authSelectors","isTabletOrMobile","useMediaQuery","query","Wrap","align","justify","pt","WrapItem","Tag","size","colorScheme","borderRadius","ml","mr","TagLabel","color","textShadow","pl","Modal","UploadAvatar","Button","w","logoutThunk","deleteAvatar","BiLogOut","id","number","Td","textAlign","fontSize","deleteContactsThunk","RiDeleteBin6Fill","img","alt","STATUS","contacts","status","filterContact","filter","filteredContacts","contact","toLowerCase","includes","fetchContactsThunk","Loader","TableContainer","justifyContent","Table","Thead","Tr","Th","Tbody","map","Contact","ErrorCard","Input","boxShadow","p","rounded","bg","placeholder","value","onChange","setFilter","_errors$name","_errors$number","_useForm","useForm","defaultValues","register","handleSubmit","errors","formState","onSubmit","data","addContactsThunk","FormLabel","_objectSpread","required","minLength","message","mb","autoComplete","Center","CardHeader","Heading","CardBody","Text","CardFooter","Card","maxW","mt","backgroundColor","Stack","spacing","SimpleGrid","templateColumns","length","EmptyPhonebook","ContactMobile","isLoggedIn","isDesktopOrLaptop","Box","pr","position","h","backgroundImage","backgroundImg","backgroundPosition","backgroundRepeat","backgroundSize","UserMenu","as","m","NavLink","to","AiFillHome","IoPersonAddSharp","Filter","FormContact","ContactListMobile","ContactList"],"sourceRoot":""}