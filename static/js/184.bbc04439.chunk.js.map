{"version":3,"file":"static/js/184.bbc04439.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/UploadAvatar/UploadAvatar.jsx","components/UserMenu/UserMenu.jsx","../node_modules/@chakra-ui/layout/src/flex.tsx","../node_modules/@chakra-ui/image/src/native-image.tsx","../node_modules/@chakra-ui/image/src/image.tsx","../node_modules/utilities/object-utils/src/omit.ts","../node_modules/@chakra-ui/layout/src/stack/v-stack.tsx","components/AuthNav/AuthNav.jsx","../node_modules/@chakra-ui/layout/src/link.tsx","pages/HomePage.jsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst Modal = ({ children, closeModal }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n  return (\n    <div\n      className=\"modal fade show\"\n      style={{ display: 'block', backdropFilter: 'blur(5px)' }}\n      onClick={handleBackdropClick}\n    >\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              area-label=\"close\"\n              onClick={closeModal}\n            ></button>\n          </div>\n          <div className=\"modal-body\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\n\nimport Avatar from 'react-avatar-edit';\nimport { useDispatch } from 'react-redux';\nimport { uploadAvatar } from 'redux/avatar/avatarSlice';\n\nconst UploadAvatar = () => {\n  const [src] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const dispatch = useDispatch();\n\n  const onCrop = view => {\n    setPreview(view);\n  };\n\n  console.log(preview);\n  return (\n    <>\n      <Avatar\n        src={src}\n        width={300}\n        height={300}\n        onCrop={onCrop}\n        onClose={dispatch(uploadAvatar(preview))}\n      />\n    </>\n  );\n};\n\nexport default UploadAvatar;\n","import {\n  Avatar,\n  Button,\n  Tag,\n  TagLabel,\n  Wrap,\n  WrapItem,\n} from '@chakra-ui/react';\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport { logoutThunk } from 'redux/auth/thunk';\n\nimport { BiLogOut } from 'react-icons/bi';\n\nimport UploadAvatar from 'components/UploadAvatar/UploadAvatar';\n\nimport Modal from 'components/Modal/Modal';\nimport { deleteAvatar } from 'redux/avatar/avatarSlice';\nimport { useMediaQuery } from 'react-responsive';\n\nconst UserMenu = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleLogOut = () => {\n    dispatch(logoutThunk());\n    dispatch(deleteAvatar());\n    navigate('/');\n  };\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsShowModal(!isShowModal);\n  };\n  const preview = useSelector(state => state.avatar.preview);\n  const name = useSelector(authSelectors.getUserName);\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 375px)' });\n  return (\n    <>\n      <Wrap\n        align=\"center\"\n        justify={isTabletOrMobile ? 'center' : 'space-between'}\n        pt={4}\n      >\n        <WrapItem>\n          <Tag size=\"lg\" colorScheme=\"grey\" borderRadius=\"full\">\n            <Avatar\n              src={preview}\n              size=\"md\"\n              name=\"User avatar\"\n              ml={-1}\n              mr={2}\n              onClick={toggleModal}\n            />\n\n            <TagLabel color=\"red\" textShadow=\"1px 1px black\" pl={2}>\n              Hello, {name}\n            </TagLabel>\n          </Tag>\n        </WrapItem>\n\n        {isShowModal && (\n          <Modal closeModal={toggleModal}>\n            <UploadAvatar />\n          </Modal>\n        )}\n        <WrapItem>\n          <Button colorScheme=\"red\" size=\"sm\" w=\"50px\" onClick={handleLogOut}>\n            <BiLogOut />\n          </Button>\n        </WrapItem>\n      </Wrap>\n    </>\n  );\n};\n\nexport default UserMenu;\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n","import { PropsOf, forwardRef } from \"@chakra-ui/system\"\n\nexport interface NativeImageOptions {\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n}\n\ninterface NativeImageProps extends PropsOf<\"img\">, NativeImageOptions {}\n\nexport const NativeImage = forwardRef(function NativeImage(\n  props: NativeImageProps,\n  ref: React.Ref<any>,\n) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props\n  return (\n    <img width={htmlWidth} height={htmlHeight} ref={ref} alt={alt} {...rest} />\n  )\n})\n\nNativeImage.displayName = \"NativeImage\"\n","import {\n  chakra,\n  SystemProps,\n  forwardRef,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport {\n  FallbackStrategy,\n  shouldShowFallbackImage,\n  useImage,\n  UseImageProps,\n} from \"./use-image\"\nimport { NativeImage, NativeImageOptions } from \"./native-image\"\n\ninterface ImageOptions extends NativeImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note 🚨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   * @type React.ReactElement\n   */\n  fallback?: React.ReactElement\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within its bounds.\n   * It maps to css `object-fit` property.\n   * @type SystemProps[\"objectFit\"]\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   * @type SystemProps[\"objectPosition\"]\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n\n  /**\n   * - beforeLoadOrError(default): loads the fallbackImage while loading the src\n   * - onError: loads the fallbackImage only if there is an error fetching the src\n   *\n   * @default \"beforeLoadOrError\"\n   * @see Issue https://github.com/chakra-ui/chakra-ui/issues/5581\n   */\n  fallbackStrategy?: FallbackStrategy\n  /**\n   * Defining which referrer is sent when fetching the resource.\n   * @type React.HTMLAttributeReferrerPolicy\n   */\n  referrerPolicy?: React.HTMLAttributeReferrerPolicy\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<HTMLChakraProps<\"img\">, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">(function Image(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props\n\n  const providedFallback = fallbackSrc !== undefined || fallback !== undefined\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   *\n   * shouldIgnoreFallbackImage determines if we have the possibility to render a fallback image\n   */\n  const shouldIgnoreFallbackImage =\n    loading != null ||\n    // use can opt out of fallback image\n    ignoreFallback ||\n    // if the user doesn't provide any kind of fallback we should ignore it\n    !providedFallback\n\n  /**\n   * returns `loaded` if fallback is ignored\n   */\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage,\n  })\n\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy)\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (showFallbackImage) {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        as={NativeImage}\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      as={NativeImage}\n      src={src}\n      srcSet={srcSet}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      referrerPolicy={referrerPolicy}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nImage.displayName = \"Image\"\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n","import { VStack } from '@chakra-ui/react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from '@chakra-ui/react';\n\nconst AuthNav = () => {\n  const navigate = useNavigate();\n\n  const handleLogIn = () => {\n    navigate('/login');\n  };\n\n  const handleSignUp = () => {\n    navigate('/signUp');\n  };\n  return (\n    <>\n      <VStack spacing=\"24px\">\n        <Button colorScheme=\"red\" size=\"sm\" w=\"75px\" onClick={handleSignUp}>\n          Sign Up\n        </Button>\n        <Button colorScheme=\"red\" size=\"sm\" w=\"75px\" onClick={handleLogIn}>\n          Log in\n        </Button>\n      </VStack>\n    </>\n  );\n};\n\nexport default AuthNav;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n","import { AbsoluteCenter, Box, Flex, Heading, Image } from '@chakra-ui/react';\nimport PhonebookImg from '../images/111220_address_book_red_soda_icon.png';\nimport backgroundImg from '../images/benjaminrobyn-jespersen-Ai9_QJaZfMc-unsplash.jpg';\nimport backgroundImgLogged from '../images/grey-gradient-background-1080-x-1920-mva29ml67gjxd6ht.jpg';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport AuthNav from 'components/AuthNav/AuthNav';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { Link as ChakraLink } from '@chakra-ui/react';\nimport { useMediaQuery } from 'react-responsive';\n\nconst HomePage = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  // const name = useSelector(authSelectors.getUserName);\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n  return (\n    <Box\n      pl={10}\n      pr={10}\n      position=\"relative\"\n      h=\"100vh\"\n      backgroundImage={isLoggedIn ? backgroundImgLogged : backgroundImg}\n      backgroundPosition=\"center\"\n      backgroundRepeat=\"no-repeat\"\n      backgroundSize=\"cover\"\n    >\n      {isLoggedIn && <UserMenu />}\n\n      <AbsoluteCenter axis=\"both\">\n        {isLoggedIn ? (\n          <>\n            <Flex display=\"flex\" flexDirection=\"column\" justifyItems=\"center\">\n              {!isTabletOrMobile && (\n                <Heading\n                  as=\"h1\"\n                  size=\"x-lg\"\n                  noOfLines={1}\n                  color=\"red\"\n                  textShadow=\"1px 1px black\"\n                >\n                  Wellcome tou your personal phonebook\n                </Heading>\n              )}\n              <ChakraLink\n                as={ReactRouterLink}\n                to=\"/phonebook\"\n                fontSize=\"30px\"\n                color=\"red\"\n                textShadow=\"1px 2px black\"\n                m=\"6\"\n                display=\"flex\"\n                justifyContent=\"center\"\n              >\n                <Image\n                  src={PhonebookImg}\n                  alt=\"phonebook\"\n                  boxSize={isTabletOrMobile ? '150px' : '450px'}\n                  objectFit=\"cover\"\n                />\n              </ChakraLink>\n            </Flex>\n          </>\n        ) : (\n          <AuthNav />\n        )}\n      </AbsoluteCenter>\n    </Box>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","children","closeModal","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","_jsx","className","style","display","backdropFilter","onClick","currentTarget","target","_jsxs","type","_useState","useState","src","_slicedToArray","_useState3","_useState4","preview","setPreview","dispatch","useDispatch","console","log","_Fragment","Avatar","width","height","onCrop","view","onClose","uploadAvatar","navigate","useNavigate","_useState2","isShowModal","setIsShowModal","toggleModal","useSelector","state","avatar","name","authSelectors","isTabletOrMobile","useMediaQuery","query","Wrap","align","justify","pt","WrapItem","Tag","size","colorScheme","borderRadius","ml","mr","TagLabel","color","textShadow","pl","Modal","UploadAvatar","Button","w","logoutThunk","deleteAvatar","BiLogOut","Flex","forwardRef","props","ref","direction","wrap","basis","grow","shrink","rest","_objectWithoutProperties","_excluded","styles","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","jsx","chakra","_objectSpread","__css","displayName","NativeImage","htmlWidth","htmlHeight","alt","Image","fallbackSrc","fallback","srcSet","fit","loading","ignoreFallback","crossOrigin","_props$fallbackStrate","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","_step","keysToOmit","arguments","length","undefined","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","key","value","err","f","omit","as","VStack","Stack","spacing","Link","useStyleConfig","_omitThemingProps","omitThemingProps","isExternal","rel","cx","isLoggedIn","Box","pr","position","h","backgroundImage","backgroundImgLogged","backgroundImg","backgroundPosition","backgroundRepeat","backgroundSize","UserMenu","AbsoluteCenter","axis","justifyItems","Heading","noOfLines","ChakraLink","ReactRouterLink","to","fontSize","m","PhonebookImg","boxSize","AuthNav"],"sourceRoot":""}