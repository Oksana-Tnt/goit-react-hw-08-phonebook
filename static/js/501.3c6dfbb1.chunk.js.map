{"version":3,"file":"static/js/501.3c6dfbb1.chunk.js","mappings":"uTAyGA,EAxFkB,WAAO,IAADA,EAAAC,EACtBC,GAMIC,EAAAA,EAAAA,IAAQ,CAAEC,cAAe,CAAEC,MAAO,QAASC,SAAU,cALvDC,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aAEaC,EAAMP,EAAnBQ,UAAaD,OACbE,EAAKT,EAALS,MAMIC,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CAACC,KAAK,OAAMF,UACzBF,EAAAA,EAAAA,KAACK,EAAAA,GAAG,CAACC,EAAE,QAAOJ,UACZK,EAAAA,EAAAA,MAAA,QAAMC,SAAUd,GAnBP,SAAAe,GACfX,GAASY,EAAAA,EAAAA,IAAWD,IAYpBZ,GACF,IAKgDc,aAAa,MAAKT,SAAA,EACxDF,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,MAAM,MAAMC,WAAW,gBAAeZ,SAAC,WAIlDF,EAAAA,EAAAA,KAACe,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAvB,EAAS,QAAS,CACpBwB,UAAU,EACVC,UAAW,CACTC,MAAO,EACPC,QAAS,sBAEX,IACFC,KAAK,QACLC,YAAY,iBACZX,aAAa,MACbY,KAAK,KACLC,GAAI,MAENxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAAAvB,SAAc,QAAdhB,EAAES,EAAOJ,aAAK,IAAAL,OAAA,EAAZA,EAAckC,WACrBpB,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,MAAM,MAAMC,WAAW,gBAAeZ,SAAC,cAIlDF,EAAAA,EAAAA,KAACe,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAvB,EAAS,WAAY,CACvBwB,UAAU,EACVC,UAAW,CACTC,MAAO,EACPC,QAAS,sBAEX,IACFC,KAAK,WACLC,YAAY,WACZX,aAAa,MACbY,KAAK,KACLC,GAAI,MAENxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAAAvB,SAAiB,QAAjBf,EAAEQ,EAAOH,gBAAQ,IAAAL,OAAA,EAAfA,EAAiBiC,WACxBpB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CAAAxB,UACLF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACN,KAAK,SAASO,YAAY,MAAML,KAAK,KAAKM,MAAM,OAAM3B,SAAC,qBAS7E,E,kDC7DA,EAjCkB,WAChB,IAAM4B,GAAWC,EAAAA,EAAAA,MAKXC,GAAmBC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,wBAEhD,OACE3B,EAAAA,EAAAA,MAACF,EAAAA,GAAG,CACF8B,EAAE,QACFC,gBAAiBJ,EAAmBK,EAAsBC,EAC1DC,mBAAmB,SACnBC,iBAAiB,YACjBC,eAAe,QAAOvC,SAAA,EAEtBF,EAAAA,EAAAA,KAAC0C,EAAAA,EAAI,CAACC,QAAQ,MAAMC,GAAI,EAAGC,GAAI,EAAE3C,UAC/BF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLN,KAAK,SACLO,YAAY,MACZL,KAAK,KACLM,MAAM,OACNiB,QApBa,WACnBhB,EAAS,UACX,EAkB8B5B,SACvB,eAKHF,EAAAA,EAAAA,KAAC+C,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/thunk';\n\nimport { Text } from '@chakra-ui/react';\n\nimport {\n  FormLabel,\n  Input,\n  Button,\n  Box,\n  Center,\n  AbsoluteCenter,\n} from '@chakra-ui/react';\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n\n    formState: { errors },\n    reset,\n  } = useForm({ defaultValues: { email: 'email', password: 'password' } });\n\n  // const email = watch('email');\n  // const password = watch('password');\n\n  const dispatch = useDispatch();\n\n  // const authError = useSelector(authSelectors.getError);\n\n  // const toast = useToast();\n\n  const onSubmit = data => {\n    dispatch(loginThunk(data));\n\n    // if (authError) {\n    //   toast({\n    //     title: 'Error log in',\n    //     description: 'Please, enter the correct data',\n    //     status: 'error',\n    //     duration: 5000,\n    //     isClosable: true,\n    //   });\n\n    // }\n    reset();\n  };\n  return (\n    <>\n      <AbsoluteCenter axis=\"both\">\n        <Box w=\"200px\">\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <FormLabel color=\"red\" textShadow=\"1px 1px black\">\n              Email\n            </FormLabel>\n\n            <Input\n              {...register('email', {\n                required: true,\n                minLength: {\n                  value: 6,\n                  message: 'Min length is 6',\n                },\n              })}\n              type=\"email\"\n              placeholder=\"user@gmail.com\"\n              autoComplete=\"off\"\n              size=\"md\"\n              mb={4}\n            />\n            <Text>{errors.email?.message}</Text>\n            <FormLabel color=\"red\" textShadow=\"1px 1px black\">\n              Password\n            </FormLabel>\n\n            <Input\n              {...register('password', {\n                required: true,\n                minLength: {\n                  value: 6,\n                  message: 'Min length is 6',\n                },\n              })}\n              type=\"password\"\n              placeholder=\"password\"\n              autoComplete=\"off\"\n              size=\"md\"\n              mb={4}\n            />\n            <Text>{errors.password?.message}</Text>\n            <Center>\n              <Button type=\"submit\" colorScheme=\"red\" size=\"sm\" width=\"75px\">\n                Log in\n              </Button>\n            </Center>\n          </form>\n        </Box>\n      </AbsoluteCenter>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\nimport { Box, Button, Wrap } from '@chakra-ui/react';\n\nimport backgroundImg from '../images/benjaminrobyn-jespersen-Ai9_QJaZfMc-unsplash.jpg';\nimport backgroundImgMobile from '../images/grey-gradient-background-1080-x-1920-mva29ml67gjxd6ht.jpg';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const handleSignUp = () => {\n    navigate('/signUp');\n  };\n\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1200px)' });\n\n  return (\n    <Box\n      h=\"100vh\"\n      backgroundImage={isTabletOrMobile ? backgroundImgMobile : backgroundImg}\n      backgroundPosition=\"center\"\n      backgroundRepeat=\"no-repeat\"\n      backgroundSize=\"cover\"\n    >\n      <Wrap justify=\"end\" pt={4} pr={4}>\n        <Button\n          type=\"button\"\n          colorScheme=\"red\"\n          size=\"sm\"\n          width=\"75px\"\n          onClick={handleSignUp}\n        >\n          Sign up\n        </Button>\n      </Wrap>\n\n      <LoginForm />\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_errors$email","_errors$password","_useForm","useForm","defaultValues","email","password","register","handleSubmit","errors","formState","reset","dispatch","useDispatch","_jsx","_Fragment","children","AbsoluteCenter","axis","Box","w","_jsxs","onSubmit","data","loginThunk","autoComplete","FormLabel","color","textShadow","Input","_objectSpread","required","minLength","value","message","type","placeholder","size","mb","Text","Center","Button","colorScheme","width","navigate","useNavigate","isTabletOrMobile","useMediaQuery","query","h","backgroundImage","backgroundImgMobile","backgroundImg","backgroundPosition","backgroundRepeat","backgroundSize","Wrap","justify","pt","pr","onClick","LoginForm"],"sourceRoot":""}